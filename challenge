#!/usr/bin/env python

import argparse
import glob
import os
import os.path
import shutil

def create_challenge(args):
	challenge_name = args.challenge_name.lower().replace(' ', '_')
	filename_root  = '{0}_{1}'.format(args.challenge_id, challenge_name)

	for lang in os.listdir('.'):
		if not os.path.isdir(lang) or lang.startswith('.'):
			continue

		template_match = glob.glob(os.path.join(lang, 'template.*'))
		if len(template_match) == 0:
			continue

		template = template_match[0]
		filename = os.path.join(lang, filename_root) + os.path.splitext(template)[1]

		if os.path.exists(filename):
			print 'Skipping {0}...'.format(filename)
		else:
			print 'Creating {0}...'.format(filename)

			shutil.copyfile(template, filename)

if __name__ == '__main__':
	parser = argparse.ArgumentParser(description = 'Create solution files for each language for a challenge')
	subparsers = parser.add_subparsers()

	create_parser = subparsers.add_parser('create')
	create_parser.add_argument('challenge_id', type = int,
						help = 'Challenge ID')
	create_parser.add_argument('challenge_name', type = str,
						help = 'Challenge name')
	create_parser.set_defaults(func = create_challenge)

	args = parser.parse_args()
	args.func(args)

